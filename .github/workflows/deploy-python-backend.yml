name: Deploy Python Backend

on:
  push:
    branches:
      - main
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up SSH for deployment
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      # Step 3: Add host key to known hosts
      - name: Add host key to known hosts
        run: |
          ssh-keyscan -H 140.245.56.252 >> ~/.ssh/known_hosts

      # Step 4: Sync files to the Oracle VM
      - name: Deploy to Oracle VM
        env:
          RSYNC_PASSWORD: ${{ secrets.RSYNC_PASSWORD }}
        run: |
          rsync -avz --exclude '__pycache__' --exclude '.env' --exclude '.git' ./ ubuntu@140.245.56.252:/home/ubuntu/website-backend-api/

      # Step 5: Setup Docker and Run Docker Compose
      - name: Setup Docker and Run Docker Compose
        run: |
          ssh ubuntu@140.245.56.252 << 'EOF'

          echo "Navigating to backend directory..."
          cd /home/ubuntu/website-backend-api

          echo "Installing Docker and Docker Compose (if not already installed)..."
          
          # Install Docker if not installed
          if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker ubuntu
              newgrp docker
          else
              echo "Docker already installed."
          fi

          # Install Docker Compose if not installed
          if ! command -v docker-compose &> /dev/null; then
              echo "Docker Compose not found. Installing..."
              sudo apt-get update
              sudo apt-get install docker-compose -y
          else
              echo "Docker Compose already installed."
          fi

          echo "Stopping existing containers..."
          docker compose down

          echo "Removing unused images..."
          docker system prune -f

          echo "Building and running the new containers..."
          docker compose up -d --build

          EOF

      # Step 6: Verify Deployment
      - name: Verify Deployment
        run: |
          ssh ubuntu@140.245.56.252 << 'EOF'
          echo "Checking application status..."
          docker ps
          docker compose ps
          EOF
