name: Deploy Python Backend

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch
      - master  # Trigger deployment on push to the master branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up SSH for deployment
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      # Step 3: Sync files to the server
      - name: Deploy to Oracle VM
        env:
          RSYNC_PASSWORD: ${{ secrets.RSYNC_PASSWORD }} # Optional: If you use rsync with a password
        run: |
          rsync -avz --exclude '__pycache__' --exclude '.env' --exclude '.git' ./ ubuntu@150.136.107.196:/home/ubuntu/website-backend-api/

      # Step 4: Set up Python environment and restart backend
      - name: Set up and Restart Backend
        run: |
          ssh ubuntu@150.136.107.196 << 'EOF'
          echo "Navigating to backend directory..."
          cd /home/ubuntu/website-backend-api

          echo "Setting up Python environment..."
          if [ ! -d "venv" ]; then
              python3 -m venv venv
          fi

          echo "Activating virtual environment..."
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          deactivate

          echo "Restarting FastAPI application with systemd..."
          sudo systemctl restart backend-api
          EOF

      # Step 5: Verify Deployment
      - name: Verify Deployment
        run: |
          ssh ubuntu@150.136.107.196 << 'EOF'
          echo "Checking application status..."
          sudo systemctl status backend-api
          EOF
