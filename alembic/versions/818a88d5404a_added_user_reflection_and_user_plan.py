"""Added user_reflection and user_plan

Revision ID: 818a88d5404a
Revises: 65a187e32e08
Create Date: 2025-03-20 21:24:34.523701

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector.sqlalchemy  # Import the pgvector module here


# revision identifiers, used by Alembic.
revision: str = '818a88d5404a'
down_revision: Union[str, None] = '65a187e32e08'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('plan_text', sa.Text(), nullable=False),
    sa.Column('plan_type', sa.String(), nullable=True),
    sa.Column('active_plan', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_plans_id'), 'user_plans', ['id'], unique=False)
    op.create_table('user_reflections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('reflection_text', sa.Text(), nullable=False),
    sa.Column('reflection_type', sa.String(), nullable=True),
    sa.Column('importance_score', sa.Integer(), nullable=True),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_reflections_id'), 'user_reflections', ['id'], unique=False)
    op.drop_index('ix_user_prompts_id', table_name='user_prompts')
    op.drop_table('user_prompts')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_prompts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('prompt_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('prompt_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_prompts_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_prompts_pkey')
    )
    op.create_index('ix_user_prompts_id', 'user_prompts', ['id'], unique=False)
    op.drop_index(op.f('ix_user_reflections_id'), table_name='user_reflections')
    op.drop_table('user_reflections')
    op.drop_index(op.f('ix_user_plans_id'), table_name='user_plans')
    op.drop_table('user_plans')
    # ### end Alembic commands ###
